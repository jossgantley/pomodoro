{"version":3,"sources":["alarm.mp3","contexts/SetupContext.js","components/Break.js","components/Session.js","components/Display.js","components/Controls.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SetupContext","createContext","SetupContextProvider","props","useState","currentBreak","setBreak","currentSession","setSession","isActive","setIsActive","seconds","setSeconds","minutes","setMinutes","currentTimer","setTimer","Provider","value","children","Break","useContext","className","id","disabled","onClick","Session","Display","useEffect","currentInterval","document","getElementById","style","color","setInterval","clearInterval","onChange","audio","play","currentTime","handleAudio","src","alarm","Controls","pause","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7169b36a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.fa54b0dc.mp3\";","import React, { createContext, useState } from \"react\";\n\nexport const SetupContext = createContext();\n\nconst SetupContextProvider = (props) => {\n    const [currentBreak, setBreak] = useState(5);\n    const [currentSession, setSession] = useState(25);\n    const [isActive, setIsActive] = useState(false)\n    const [seconds, setSeconds] = useState(60)\n    const [minutes, setMinutes] = useState(currentSession)\n    const [currentTimer, setTimer]=useState(\"Session\")\n    return ( \n        <SetupContext.Provider value={{currentBreak, currentSession, currentTimer, isActive, seconds, minutes,\n        setBreak, setSession, setTimer, setIsActive, setSeconds, setMinutes}}>\n            {props.children}\n        </SetupContext.Provider>\n     );\n}\n \nexport default SetupContextProvider;","import React, { useContext } from \"react\";\nimport { SetupContext } from \"../contexts/SetupContext\";\n\nconst Break = () => {\n    const {currentTimer, setSeconds, setMinutes, currentBreak, setBreak, isActive} = useContext(SetupContext)\n    return ( \n        <div className=\"col-12 col-md-6 text-center\" id=\"break\">\n            <label className=\"font-weight-bold\" id=\"break-label\">Break Length</label>\n            <br/>\n            <button disabled={currentBreak===1 ? true : false} \n                onClick={()=>{if(isActive===false){setBreak(currentBreak-1); if(currentTimer===\"Break\"){setMinutes(currentBreak-1);setSeconds(0)}}}} \n                id=\"break-decrement\"\n                className=\"btn\">\n                    <i className=\"fas fa-arrow-down\"></i>\n            </button>\n            \n            <span id=\"break-length\">{currentBreak}</span>\n\n            <button disabled={currentBreak===60 ? true : false} \n                onClick={()=>{if(isActive===false){setBreak(currentBreak+1); if(currentTimer===\"Break\"){setMinutes(currentBreak+1);setSeconds(0)}}}} \n                id=\"break-increment\"\n                className=\"btn\">\n                    <i className=\"fas fa-arrow-up\"></i>\n            </button>\n        </div>\n     );\n}\n \nexport default Break;","import React, { useContext } from \"react\";\nimport { SetupContext } from \"../contexts/SetupContext\";\n\nconst Session = () => {\n    const {currentTimer, setMinutes, setSeconds, currentSession, setSession, isActive} = useContext(SetupContext)\n    return ( \n        <div className=\"col-12 col-md-6 text-center\" id=\"session\">\n            <label className=\"font-weight-bold\"id=\"session-label\">Session Length</label>\n            <br/>\n            <button disabled={currentSession===1 ? true : false} \n            onClick={()=>{if(isActive===false){setSession(currentSession-1);if (currentTimer===\"Session\") {setMinutes(currentSession-1);setSeconds(60)}}}} \n            id=\"session-decrement\"\n            className=\"btn\">\n                <i className=\"fas fa-arrow-down\"></i>\n            </button>\n            \n            <span id=\"session-length\">{currentSession}</span>\n\n            <button disabled={currentSession===60 ? true : false} \n            onClick={()=>{if(isActive===false){setSession(currentSession+1); if(currentTimer===\"Session\"){setMinutes(currentSession+1);setSeconds(60)}}}} \n            id=\"session-increment\"\n            className=\"btn\">\n                <i className=\"fas fa-arrow-up\"></i>\n            </button>\n        </div>\n     );\n}\n \nexport default Session;","import React, { useContext, useEffect } from \"react\";\nimport { SetupContext } from \"../contexts/SetupContext\";\nimport alarm from \"../alarm.mp3\";\n\nconst Display = () => {\n    const {setTimer, currentTimer, setSession, setBreak, isActive, currentSession, currentBreak, minutes, setMinutes, seconds, setSeconds} = useContext(SetupContext)\n    \n    useEffect(()=>{\n        \n        let currentInterval =null;\n        if(minutes<1){\n            document.getElementById(\"time-left\").style.color=\"red\";\n        } else if(minutes>1){\n            document.getElementById(\"time-left\").style.color=\"black\"\n        }\n        if (!isActive){\n        clearInterval(currentInterval)\n       \n       \n     \n        }\n        else if(isActive) {\n            currentInterval = setInterval(()=>{\n                setSeconds(seconds-1)\n                if(minutes!==0 && seconds===1){\n                    setSeconds(60)\n                } else if(seconds===60){\n                    setMinutes(minutes-1)\n                } else if(currentTimer===\"Session\" && minutes===0 && seconds ===0){\n\n                        setMinutes(currentBreak);\n                        setTimer(\"Break\");\n                        setSeconds(60);\n                        \n                        \n                } else if(currentTimer===\"Break\" && minutes===0 && seconds ===0){\n                    setMinutes(currentSession);\n                    setTimer(\"Session\");\n                    setSeconds(60);\n                    \n                        \n                } \n            }, 1000)\n        }\n        return () => {\n            clearInterval(currentInterval)\n        }\n     \n    }, [currentTimer, setTimer, seconds, minutes, currentSession, currentBreak, isActive, setMinutes, setSeconds, setSession, setBreak])\n    const handleAudio = () =>{\n        const audio = document.getElementById(\"beep\")\n        if (seconds===0){\n            audio.play()\n            setInterval(audio.currentTime=0, 2000)\n            \n        }\n    }\n  \n    return ( \n        <div className=\"col-12 text-center mt-5\" id=\"clock\">\n            <label className=\"font-weight-bold\"id=\"timer-label\">{currentTimer}</label>\n            <br/>\n             <span onChange={handleAudio()}id=\"time-left\">{minutes<10? \"0\"+minutes : minutes}:{seconds===60 ? \"00\" : seconds<10 ? \"0\"+seconds: seconds}</span>\n             <audio id=\"beep\" src={alarm}></audio>\n        </div>\n     );\n}\n \nexport default Display;","import React, { useContext } from \"react\"\nimport { SetupContext } from \"../contexts/SetupContext\";\n\nconst Controls = () => {\n    const{setTimer, setBreak, setSession, setMinutes, setSeconds, setIsActive, isActive} = useContext(SetupContext)\n    const toggleActive = () =>{\n        setIsActive(!isActive)\n       \n    }\n    const reset = () =>{\n        const audio = document.getElementById(\"beep\")\n        setIsActive(false);\n        setTimer(\"Session\");\n        \n        setBreak(5);\n        setSession(25);\n        setMinutes(25);\n        setSeconds(60);\n        audio.pause();\n        audio.currentTime = 0;\n    }\n    return ( \n        <div className=\"text-center col-12 mt-2\" id=\"controls\">\n            <button  className=\"btn\" onClick={toggleActive}id=\"start_stop\">{isActive ? <i className=\"fas fa-pause\"></i> : <i className=\"fas fa-play\"></i>}</button>\n            <button  className=\"btn\" onClick={reset} id=\"reset\"><i className=\"fas fa-redo-alt\"></i></button>\n        </div>\n     );\n}\n \nexport default Controls;","import React from 'react';\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport Display from './components/Display';\nimport Controls from './components/Controls';\nimport SetupContextProvider from './contexts/SetupContext';\n\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid row mt-4\">\n      \n      <header className=\"col-12 mb-5\">\n      <h1 className=\"text-center font-weight-bold\">Pomodoro Clock</h1>\n      </header>\n      <SetupContextProvider>\n      <Break/>\n      <Session/>\n      <Display/>\n      <Controls/>\n      </SetupContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}